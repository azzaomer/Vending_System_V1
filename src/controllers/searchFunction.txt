async function searchTransaction(req, res) {
    const { id, type } = req.query; // e.g., /search?id=12345&type=transID

    // --- Input Validation ---
    if (!id || !type || (type !== 'transID' && type !== 'meterNum')) {
        return res.status(400).json({
            success: false,
            message: "Invalid input. Query parameters 'id' and 'type' ('transID' or 'meterNum') are required."
        });
    }

    console.log(`[ROUTE] Processing search request for ${type}: ${id}`);

    try {
        // --- Call Repository Layer (P1.1.D, F-1.1.3) ---
        const transaction = await transactionRepo.findTransactionsByIdentifier(id, type);

        if (!transaction) {
            return res.status(404).json({
                success: false,
                message: `Transaction not found for ${type}: ${id}.`
            });
        }

        // --- Success Response ---
        // Return the relevant details from the found transaction record
        // The 'response_data' field contains the parsed JSON from the Hub response
        return res.status(200).json({
            success: true,
            message: `Transaction found for ${type}: ${id}.`,
            transaction: {
                id: transaction.id,
                transId: transaction.trans_id,
                meterNum: transaction.meter_num,
                action: transaction.action_requested,
                requestTime: transaction.request_timestamp,
                responseTime: transaction.response_timestamp,
                hubState: transaction.hub_state,
                errorCode: transaction.hub_error_code,
                token: transaction.token_received,
                invoice: transaction.invoice_num,
                // Include the parsed response details if available
                hubResponseDetails: transaction.response_data ? (transaction.response_data.xml || transaction.response_data) : null 
            }
        });

    } catch (error) {
        // --- Critical Error Handling ---
        console.error(`[CONTROLLER ERROR] Search transaction failed for ${type} ${id}:`, error.message);
        return res.status(500).json({
            success: false,
            message: 'Server failed to process search request.',
            detail: error.message
        });
    }
}
